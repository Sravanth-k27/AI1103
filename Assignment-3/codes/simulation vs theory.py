# -*- coding: utf-8 -*-
"""Untitled17.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J1YqRiAOCaVHnYEl9KXeAqti9IL7fi_V
"""

from scipy.stats import bernoulli
import numpy as np
import matplotlib.pyplot as plt
# no of times the experiment is conducting.
n=600
sim_expectation_value=0
#caluclating simulated probability of (X=i):
def simul_prob(i):
  count=0
  j=0
  while(j<n):
    a=bernoulli.rvs(size=i,p=2/3)
    j=j+1
    k=0
    while(k<i):
      if (a[i-1]==0):
        break
      elif (a[k]==1 and k!=i-1):
        break
      elif (k==i-1):
        count=count+1
      
      k=k+1
  return count/n
#theoritical probability of P(X=i):
def theory_prob(i):
  if i!=0:
    return 2/(3**i)
for b in range(1,1001):
  sim_expectation_value=sim_expectation_value+simul_prob(b)*(b)

theory_expectation_value=3/2

print("simulated expectation value E(X) is :",sim_expectation_value)
print("theoritical expectation value E(X) is :",theory_expectation_value)
print("absolute differnce between the simulated and theory expectation values is :",abs(sim_expectation_value-theory_expectation_value))
#plotting 
barwidth=0.25
fig=plt.subplots(figsize=(8,4))
simul_prob=[simul_prob(1),simul_prob(2),simul_prob(3),simul_prob(4),simul_prob(5)]
theory_prob=[theory_prob(1),theory_prob(2),theory_prob(3),theory_prob(4),theory_prob(5)]
br1=np.arange(len(simul_prob))
br2=[x+barwidth for x in br1]
plt.bar(br1,simul_prob,color='r',width=barwidth,edgecolor='grey',label='simulated probability')
plt.bar(br2,theory_prob,color='b',width=barwidth,edgecolor='grey',label='theory probability')
plt.xlabel('x')
plt.ylabel('P(X=x)')
plt.xticks([r+barwidth for r in range(len(simul_prob))],('1','2','3','4','5'))
plt.title('Theory vs Simulated for first 5 values of x')
plt.legend()
plt.show()

